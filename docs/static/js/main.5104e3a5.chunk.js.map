{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACO,sBAAMC,SAVQ,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMf,SACK,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPpBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0DAC6CC,UAAUH,GADvD,sDAECI,MAAMF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFDO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEGqB,EDlBiBK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACI,qCACA,6BAAKpB,IAEHoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACT,qBAAKA,UAAU,YAAf,SAEYT,EAAKE,KAAI,SAACkB,GAAD,OACT,cAAC,EAAD,eAEQA,GADCA,EAAMhB,aEd1BiB,EAAe,WAGxB,MAAoC1C,mBAAS,CAAC,gBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACQ,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MClB7B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5104e3a5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n          setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n         if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('');\r\n         }\r\n         \r\n    }\r\n    \r\n    return (\r\n           <form onSubmit={ handleSubmit }>\r\n                <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                />\r\n           </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=JhhuSkRLJSKOMUaat7HfbKV7wWU5pO8M`;\r\n    const resp =  await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    //console.log(id, title, url)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n          <img src={url} alt={title}/>\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className='card-grid'>\r\n                    { \r\n                        data.map((image) => \r\n                        <GifGridItem \r\n                            key={image.id}\r\n                            {...image}\r\n                        />\r\n                        )\r\n                    }\r\n           \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n      \r\n    useEffect( () => {\r\n  \r\n        getGifs(category)\r\n        .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n        })\r\n \r\n       \r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    //const handleAdd = (e) => {\r\n    //    setCategories([...categories, 'Star Trek']);\r\n    //      setCategories(cats => [...cats, 'start trek']);\r\n    //}\r\n\r\n    return(\r\n        <>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories} />  \r\n                <hr/>\r\n               \r\n                <ol>\r\n                    { \r\n                        categories.map((category) => \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                        )\r\n                    }\r\n                </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}